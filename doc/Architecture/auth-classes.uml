@startuml

' definitions
' -----------

' package "edu.harvard.iq.dataverse.authorization"
class AccessRequest
class ApiKey
class AuthenticatedUser
interface AuthenticationManager
interface AuthenticationProvider
class ExplicitGroup
interface Group
interface GroupCreator
class IpGroup
class LocalAuthenticationProvider
interface RoleAssignee
class ShibAuthenticationProvider
class ShibGroup
interface User
interface UserLister
' end package

' content
' -------

' AuthenticationManager:
AuthenticationManager : Collection authenticationProviders
AuthenticationManager : void registerProvider(AuthenticationProvider)

' GroupCreator:
GroupCreator : Group createGroup()

' UserLister:
UserLister : List listUsers()

' Group:
Group : String name
Group : String description
Group : Collection roleAssignees

' LocalAuthenticationProvider:
AuthenticationProvider <|.. LocalAuthenticationProvider
UserLister <|.. LocalAuthenticationProvider
GroupCreator <|.. LocalAuthenticationProvider
LocalAuthenticationProvider : RoleAssignee getRoleAssignee(String)
LocalAuthenticationProvider : List listUsers()
LocalAuthenticationProvider : Group createGroup()

' User:

' RoleAssignee:
RoleAssignee : String identifier
RoleAssignee : boolean showInLists
RoleAssignee : String displayInfo()

' ShibGroup:
Group <|.. ShibGroup
ShibGroup : Map getHeaderMatches()

' ExplicitGroup:
Group <|.. ExplicitGroup
ExplicitGroup : void add(RoleAssignee)
ExplicitGroup : void remove(RoleAssignee)
ExplicitGroup : List getRoleAssignees()

' AuthenticationProvider:
AuthenticationProvider : RoleAssignee getRoleAssignee(String)

' AccessRequest:
AccessRequest --> "1" AuthenticatedUser

' ShibAuthenticationProvider:
AuthenticationProvider <|.. ShibAuthenticationProvider
GroupCreator <|.. ShibAuthenticationProvider
ShibAuthenticationProvider : RoleAssignee getRoleAssignee(String)
ShibAuthenticationProvider : Group createGroup()

' AuthenticatedUser:
User <|.. AuthenticatedUser

' ApiKey:
ApiKey : String getKey()
ApiKey : String getTitle()

' IpGroup:
Group <|.. IpGroup

@enduml
