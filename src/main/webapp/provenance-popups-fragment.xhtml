<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:f="http://java.sun.com/jsf/core"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:c="http://java.sun.com/jsp/jstl/core"
                xmlns:p="http://primefaces.org/ui"
                xmlns:o="http://omnifaces.org/ui"
                xmlns:jsf="http://xmlns.jcp.org/jsf"
                xmlns:iqbs="http://xmlns.jcp.org/jsf/composite/iqbs">
    <p:dialog id="editProvenancePopup" styleClass="smallPopUp" header="#{bundle['file.editProvenanceDialog']}" widgetVar="editProvenancePopup" modal="true">
        <p:fragment id="assignMessages">
            <div class="messagePanel">
                <iqbs:messages collapsible="true" />
            </div>
        </p:fragment>
        <div class="form-horizontal">
            <p:outputPanel id="provPopupOutput" class="form-group text-left">
                <div class="col-sm-12">
                    <p class="help-block">
                        <h:outputFormat value=" #{bundle['file.editProvenanceDialog.tip']}" escape="false">
                            <f:param value="#{systemConfig.guidesBaseUrl}"/>
                            <f:param value="#{systemConfig.guidesVersion}"/>
                        </h:outputFormat>
                    </p>
                </div>
                <label for="provenanceBundle" class="col-sm-4 control-label">
                    #{bundle['file.editProvenanceDialog.bundleFile']}
                </label>
                <div class="col-sm-8">
                    <ui:fragment rendered="#{provenanceUploadFragmentBean.provExistsInPreviousVersion() == true}">
                        <p class="help-block"><span class="text-danger">#{bundle['file.editProvenanceDialog.bundleFile.alreadyPublished']}</span></p>
                    </ui:fragment>
                    <ui:fragment id="provUploadFragment" rendered="#{provenanceUploadFragmentBean.provExistsInPreviousVersion() == false}">
                        <ui:fragment rendered="#{provenanceUploadFragmentBean.jsonUploadedState == false}">
                            <p class="help-block">#{bundle['file.editProvenanceDialog.bundleFile.instructions']}</p>
                            <p:fileUpload id="provUpload" 
                                          styleClass="margin-bottom"
                                          dragDropSupport="true"
                                          auto="true"
                                          multiple="false"
                                          allowTypes="/(\.|\/)(json)$/"
                                          fileUploadListener="#{provenanceUploadFragmentBean.handleFileUpload}" 
                                          update="provPopupOutput" 
                                          label="#{bundle['file.editProvenanceDialog.selectToAddBtn']}"
                                          oncomplete="bind_bsui_components();PF('provUpload').hide();"
                                          fileLimit="1" 
                                          invalidSizeMessage="#{bundle['file.edit.error.file_exceeds_limit']}"/>
                            <script>
                                function uploadStarted() {
                                    $('button[id$="provUploadStarted"]').trigger('click');
                                }
                                function uploadFinished(fileupload) {                    
                                    if (fileupload.files.length === 0) {
                                        $('button[id$="AllUploadsFinished"]').trigger('click');
                                    }
                                }
                            </script>
                        </ui:fragment>
                        <ui:fragment rendered="#{provenanceUploadFragmentBean.jsonUploadedState}">
                            <div id="provFileText" class="col-sm-5 text-success">
                                <div class="margin-top-half">
                                    <span class="glyphicon glyphicon-ok"></span> #{bundle['file.editProvenanceDialog.uploadSuccess']}
                                </div>
                            </div>
                            <div class="col-sm-7 inline-buttons">
                                <div class="button-block">
                                    <p:commandButton styleClass="btn btn-default" id="editProvenanceJsonPreview" value="#{bundle.preview}"/>
                                    <p:commandButton styleClass="btn btn-default" id="editProvenanceJsonRemove" value="#{bundle.remove}" update="provPopupOutput" immediate="true" actionListener="#{provenanceUploadFragmentBean.updateJsonRemoveState()}"/>
                                </div>
                            </div>
                        </ui:fragment>
                        <p:message for="provUpload" id="provUploadMessage" display="text" />
                    </ui:fragment>
                    <!-- dropdown for selecting the provenance entity connected to the DataFile. -->
                </div>
                <label for="provenanceBundle" class="col-sm-4 control-label" jsf:rendered="#{provenanceUploadFragmentBean.jsonUploadedState}">
                    #{bundle['file.editProvenanceDialog.bundleEntity']}
                </label>
                <div class="col-sm-8">
                    <ui:fragment rendered="#{provenanceUploadFragmentBean.jsonUploadedState}">
                        <!-- groupBy="# {roleAssignee.identifier.startsWith('@')?'Users':'Groups'}"  -->
                        <p:autoComplete id="provJsonNameDropdown" 
                            required="#{provenanceUploadFragmentBean.jsonUploadedState}"
                            dropdown="true" scrollHeight="180" style="width:100%;"
                            minQueryLength="0" queryDelay="1000"
                            value="#{provenanceUploadFragmentBean.dropdownSelectedEntity}"
                            completeMethod="#{provenanceUploadFragmentBean.getProvJsonParsedEntitiesArray()}" 
                            onclick="PF('provJsonNameDropdown').search(PF('provJsonNameDropdown').input.val())"
                            var="provEntityFileData" itemLabel="#{provEntityFileData.fileName}" itemValue="#{provEntityFileData}"
                            forceSelection="true" 
                            converter="provEntityFileDataConverter">
                            <p:column>
                                <h:outputText value="#{provEntityFileData.fileName}" />
                            </p:column>
                            <p:column>
                                <h:outputText value="#{provEntityFileData.fileType}" />
                            </p:column>
                            <p:column>
                                <h:outputText value="#{provEntityFileData.entityName}" />
                            </p:column>
                        </p:autoComplete>
                        <p:message for="provJsonNameDropdown" display="text"/>
                    </ui:fragment>
                </div>
            </p:outputPanel>
            
            <div class="form-group text-left">
                <div class="col-sm-12">
                    <p class="help-block">#{bundle['file.editProvenanceDialog.description.tip']}</p>
                </div>
            </div>
            <div class="form-group text-left">
                <label for="provenanceAddDescription" class="col-sm-4 control-label">
                    #{bundle['file.editProvenanceDialog.description']}
                </label>
                <div class="col-sm-8">
                    <div class="row form-inline">
                        <div class="col-sm-12">
                            <p:inputTextarea id="provenanceFreeform" styleClass="form-control" immediate="true" rows="2" cols="40" value="#{provenanceUploadFragmentBean.freeformTextInput}" 
                                            placeholder="#{bundle['file.editProvenanceDialog.description.placeholder']}"
                                            onkeypress="if (event.keyCode == 13) {
                                                    return false;
                                                }"
                                            style="width:98%; margin-top:.5em;"/>
                            <p:message for="provenanceFreeform" display="text" />
                        </div>  
                    </div>
                </div>
            </div>
            <div class="button-block">
                <p:commandButton styleClass="btn btn-default" id="editProvenancePopupSaveButton" value="#{bundle.saveChanges}" update="provPopupOutput" oncomplete="if (args &amp;&amp; !args.validationFailed) { PF('editProvenancePopup').hide();PF('confirmProvenancePopup').show(); }" />
                <p:commandButton styleClass="btn btn-default" id="editProvenancePopupCancelButton" value="#{bundle.cancel}" onclick="PF('editProvenancePopup').hide();"  />
            </div>
        </div>
    </p:dialog>
    <p:dialog id="confirmProvenancePopup" header="#{bundle['file.confirmProvenanceDialog']}" modal="true" visible="false" styleClass="smallPopUp" widgetVar="confirmProvenancePopup">
        <div class="form-group text-left text-warning">
            <span class="glyphicon glyphicon-warning-sign"></span> <h:outputText value=" #{bundle['file.confirmProvenanceDialog.tip1']}"/>
        </div>
        <div class="form-group text-left text-warning">
            <h:outputText value=" #{bundle['file.confirmProvenanceDialog.tip2']}"/>
        </div>
        <div class="button-block">
            <p:commandButton styleClass="btn btn-default" id="confirmProvenancePopupSaveButton" value="#{bundle.continue}" oncomplete="PF('confirmProvenancePopup').hide();" actionListener="#{provenanceUploadFragmentBean.stagePopupChanges(saveInPopup == 'true')}" update=":messagePanel"/>
            <p:commandButton styleClass="btn btn-default" id="confirmProvenancePopupCancelButton" value="#{bundle.cancel}" onclick="PF('editProvenancePopup').show();PF('confirmProvenancePopup').hide();"/>
        </div>
    </p:dialog>
</ui:composition>